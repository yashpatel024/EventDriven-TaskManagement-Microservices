User-Service ================
DB: edsystem_user_db
User = admin_edsystem_user
password = adminuser

<====Set Configuration and Setup the Repo for initial push====>
Task-Service ================
DB: edsystem_task_db
User = admin_edsystem_task
Password = admintask

Notification-Service ================
DB: edsystem_notification_db
User = admin_edsystem_notification
Password = adminnotification


SCRIPT ======================
DML====

CREATE USER admin_edsystem_task WITH PASSWORD 'admintask';
CREATE DATABASE edsystem_task_db OWNER admin_edsystem_task;

CREATE USER admin_edsystem_notification WITH PASSWORD 'adminnotification';
CREATE DATABASE edsystem_notification_db OWNER admin_edsystem_notification;

CHECK DATABASE
psql -U testuser -d testdb


MAVEN CONFIGURATION =================
spring.application.name=user-service
spring.datasource.url=jdbc:postgresql://localhost:5432/edsystem_user_db
spring.datasource.username=admin_edsystem_user
spring.datasource.password=adminuser
spring.jpa.hibernate.ddl-auto=update

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=user-service-group

server.port=8081

PORTS ===================
user = 8081
task = 8082
notification = 8083


DOCKER SETUP ========================
a. Save the updated Docker Compose file.
b. Stop any running containers and remove old volumes:
    docker-compose down -v
c. Start the services:
    docker-compose up -d
d. Check if the services are running:
    docker-compose ps
e. View the logs to ensure there are no errors:
    docker-compose logs -f

TEST THE KAFKA SETUP==============
a.Access the Kafka UI:
    Open a web browser and go to http://localhost:8080. You should see the Kafka UI interface where you can manage topics, view brokers, etc.
b. Create a test topic:
    docker-compose exec kafka kafka-topics.sh --create --topic test-topic --bootstrap-server kafka:9093 --partitions 1 --replication-factor 1
c. List topics:
    docker-compose exec kafka kafka-topics.sh --list --bootstrap-server kafka:9093
d. Produce a message:
    echo "Test message" | docker-compose exec -T kafka kafka-console-producer.sh --topic test-topic --bootstrap-server kafka:9093
e. Consume messages:
    docker-compose exec kafka kafka-console-consumer.sh --topic test-topic --from-beginning --bootstrap-s